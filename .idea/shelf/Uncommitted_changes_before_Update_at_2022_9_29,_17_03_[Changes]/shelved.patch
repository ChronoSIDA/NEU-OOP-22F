Index: LAB1/src/AbstractBirds.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\n\npublic abstract class AbstractBirds implements Birds{\n    protected String birdName;\n\n    protected BIRDTYPE birdType;\n\n    protected ArrayList<String> characteristics;\n\n    protected boolean extinct;\n\n    protected int numWings;\n\n    protected ArrayList<FEED> preferredFood;\n\n    protected boolean waterBird;\n    protected ArrayList<WATERBODY> waterBody;\n\n    public AbstractBirds(String birdName, BIRDTYPE birdType, ArrayList<String> characteristics, boolean extinct, int numWings, ArrayList<FEED> preferredFood, boolean waterBird, ArrayList<WATERBODY> waterBody){\n        if (preferredFood.size() < 2 || preferredFood.size() > 4){\n            throw new IllegalArgumentException(\"Birds' preferred food should in range of 2 to 4 items\");\n        }\n\n        if (numWings < 0){\n            throw new IllegalArgumentException(\"Number of wings cannot be smaller than 0.\");\n        } else if (numWings > 6) {\n            throw new IllegalArgumentException(\"Birds don't have that many wings.\");\n        }\n\n        this.birdName = birdName;\n        this.birdType = birdType;\n        this.characteristics = characteristics;\n        this.extinct = extinct;\n        this.numWings = numWings;\n        this.preferredFood = preferredFood;\n\n        if (waterBird == true){\n            this.waterBody = waterBody;\n        } else {\n            this.waterBody = null;\n        }\n    }\n\n    public String getBirdName() {\n        return birdName;\n    }\n\n    public BIRDTYPE getBirdType() {\n        return birdType;\n    }\n\n    public ArrayList<String> getCharacteristics() {\n        return characteristics;\n    }\n\n    public boolean isExtinct() {\n        return extinct;\n    }\n\n    public int getNumWings() {\n        return numWings;\n    }\n\n    public ArrayList<FEED> getPreferredFood() {\n        return preferredFood;\n    }\n\n    public ArrayList<WATERBODY> getWaterBody() {\n        return waterBody;\n    }\n\n    public abstract CLASSIFICATIONS getBirdsClass();\n\n    public void setBirdName(String birdName) {\n        this.birdName = birdName;\n    }\n\n    public void setBirdType(BIRDTYPE birdType) {\n        this.birdType = birdType;\n    }\n\n    public void setCharacteristics(ArrayList<String> characteristics) {\n        this.characteristics = characteristics;\n    }\n\n    public void setExtinct(boolean extinct) {\n        this.extinct = extinct;\n    }\n\n    public void setNumWings(int numWings) {\n        this.numWings = numWings;\n    }\n\n    public void setPreferredFood(ArrayList<FEED> preferredFood) {\n        this.preferredFood = preferredFood;\n    }\n\n    public void setWaterBird(boolean waterBird) {\n        this.waterBird = waterBird;\n    }\n\n    public void setWaterBody(ArrayList<WATERBODY> waterBody) {\n        this.waterBody = waterBody;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/AbstractBirds.java b/LAB1/src/AbstractBirds.java
--- a/LAB1/src/AbstractBirds.java	(revision 0f9953306856ed813ba9aa3c91789ba0cc945617)
+++ b/LAB1/src/AbstractBirds.java	(date 1664485215174)
@@ -14,7 +14,7 @@
     protected ArrayList<FEED> preferredFood;
 
     protected boolean waterBird;
-    protected ArrayList<WATERBODY> waterBody;
+
 
     public AbstractBirds(String birdName, BIRDTYPE birdType, ArrayList<String> characteristics, boolean extinct, int numWings, ArrayList<FEED> preferredFood, boolean waterBird, ArrayList<WATERBODY> waterBody){
         if (preferredFood.size() < 2 || preferredFood.size() > 4){
Index: LAB1/src/Birds.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public interface Birds {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Birds.java b/LAB1/src/Birds.java
--- a/LAB1/src/Birds.java	(revision 0f9953306856ed813ba9aa3c91789ba0cc945617)
+++ b/LAB1/src/Birds.java	(date 1664484498390)
@@ -1,2 +1,3 @@
 public interface Birds {
+
 }
Index: LAB1/src/Owls.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\n\npublic class Owls extends AbstractBirds{\n\n    public Owls(String birdName, BIRDTYPE birdType, ArrayList<String> characteristics, boolean extinct, int numWings, ArrayList<FEED> preferredFood, boolean waterBird, ArrayList<WATERBODY> waterBody) {\n        super(birdName, birdType, characteristics, extinct, numWings, preferredFood, waterBird, waterBody);\n        ArrayList<String> chara = new ArrayList<>();\n        chara.add(\"Owls are distinguished by the facial disks that frame the eyes and bill. \");\n\n        if(birdType != BIRDTYPE.OWLS){\n            throw new IllegalArgumentException(\"The bird type has to be Owls\");\n        }\n    }\n\n    @Override\n    public CLASSIFICATIONS getBirdsClass() {\n        return CLASSIFICATIONS.OWLS;\n    }\n\n    @Override\n    public String toString() {\n        String desc;\n        String extinct;\n        if (isExtinct()){\n            extinct = \"Yes \";\n        } else {\n            extinct = \"No \";\n        }\n        desc = \"Bird Name:\" + this.birdName + \" Bird Type: \" + this.birdType + \"\\n\" +\n                \" Characteristics: \" + this.characteristics + \"\\n\" +\n                \" Extinction: \" + extinct + \"Number of Wings: \" + \"\\n\" +\n                \" Preferred Food: \" + this.preferredFood + \"\\n\";\n\n        return desc;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Owls.java b/LAB1/src/Owls.java
--- a/LAB1/src/Owls.java	(revision 0f9953306856ed813ba9aa3c91789ba0cc945617)
+++ b/LAB1/src/Owls.java	(date 1664484501786)
@@ -26,10 +26,10 @@
         } else {
             extinct = "No ";
         }
-        desc = "Bird Name:" + this.birdName + " Bird Type: " + this.birdType + "\n" +
-                " Characteristics: " + this.characteristics + "\n" +
+        desc = "Bird Name:" + super.getBirdName() + " Bird Type: " + getBirdType() + "\n" +
+                " Characteristics: " + super.getCharacteristics() + "\n" +
                 " Extinction: " + extinct + "Number of Wings: " + "\n" +
-                " Preferred Food: " + this.preferredFood + "\n";
+                " Preferred Food: " + getPreferredFood() + "\n";
 
         return desc;
     }
Index: LAB1/src/Conservatories.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Conservatories.java b/LAB1/src/Conservatories.java
new file mode 100644
--- /dev/null	(date 1664484501654)
+++ b/LAB1/src/Conservatories.java	(date 1664484501654)
@@ -0,0 +1,46 @@
+import java.util.HashMap;
+
+public class Conservatories implements Conservatory{
+  //map location to corresponding aviaries
+  private HashMap<Location, Aviary> Location_Aviary;
+
+  //map the food to its quantity
+  private HashMap<FEED, Integer> Food_Quantity;
+  public Conservatories(){
+    for (FEED food: FEED.values()){
+      Food_Quantity.put(food, 0);//initialize the Food quentity
+    }
+    Location_Aviary = new HashMap<>();
+    Food_Quantity = new HashMap<>();
+  }
+
+  @Override
+  public void addBird(Birds birds) {
+
+  }
+
+  @Override
+  public void calculateFood() {
+
+  }
+
+  @Override
+  public Location getAviary(Birds birds) {
+    return null;
+  }
+
+  @Override
+  public void printSign(Aviary aviary) {
+
+  }
+
+  @Override
+  public void printMap() {
+
+  }
+
+  @Override
+  public void printIndex() {
+
+  }
+}
Index: LAB1/src/Conservatory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Conservatory.java b/LAB1/src/Conservatory.java
new file mode 100644
--- /dev/null	(date 1664484501658)
+++ b/LAB1/src/Conservatory.java	(date 1664484501658)
@@ -0,0 +1,25 @@
+public interface Conservatory {
+  //assign a new bird to an aviary in the conservatory
+  void addBird(Birds birds);
+
+  //Calculate what food needs to be kept and in what quantities
+  void calculateFood();
+
+  //Have a guest look up which aviary a bird is in
+  Location getAviary(Birds birds);
+
+  //Print a sign for any given aviary that gives a description of the birds it houses,
+  // and any interesting information that it may have about that animal.
+  void printSign(Aviary aviary);
+
+
+  //Print a “map” that lists all the aviaries by location and the birds they house
+  void printMap();
+
+  //Print an index that lists all birds in the conservatory in alphabetical order
+  // and their location
+  void printIndex();
+
+
+
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"7948e5fc-f9e6-4264-b3f9-810baf5dce05\" name=\"Changes\" comment=\"Added Birds of Prey, FlightLess Birds, Owls, and Parrots.\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/LAB1/src/AbstractBirds.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/LAB1/src/AbstractBirds.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/LAB1/src/BirdsOfPrey.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/LAB1/src/BirdsOfPrey.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/LAB1/src/FlightLess.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/LAB1/src/FlightLess.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/LAB1/src/Owls.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/LAB1/src/Owls.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/LAB1/src/Parrots.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/LAB1/src/Parrots.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JUnit4 Test Class\" />\n        <option value=\"Interface\" />\n        <option value=\"Record\" />\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2F8NFeNDYuMgCVDNt0k9i7jDeFS\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit4&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4&quot;: &quot;&quot;,\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;openjdk-19&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/sidaz/Desktop/5010/NEUOOP22F/temp1/test&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\sidaz\\Desktop\\5010\\NEUOOP22F\\temp1\\test\" />\n      <recent name=\"C:\\Users\\sidaz\\Desktop\\5010\\NEUOOP22F\\temp1\\src\" />\n      <recent name=\"C:\\Users\\sidaz\\Desktop\\5010\\NEUOOP22F\\HW1\\test\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\sidaz\\Desktop\\5010\\NEUOOP22F\\HW1\" />\n      <recent name=\"C:\\Users\\sidaz\\Desktop\\5010\\NEUOOP22F\\src\" />\n    </key>\n    <key name=\"CreateTestDialog.Recents.Supers\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"CreateTestDialog.RecentsKey\">\n      <recent name=\"weather\" />\n      <recent name=\"\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"JUnit.PersonTest\">\n    <configuration name=\"PersonTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"NEUOOP22F\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"PersonTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"PersonTest.testFirst\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"NEUOOP22F\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"PersonTest\" />\n      <option name=\"METHOD_NAME\" value=\"testFirst\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.PersonTest.testFirst\" />\n        <item itemvalue=\"JUnit.PersonTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"7948e5fc-f9e6-4264-b3f9-810baf5dce05\" name=\"Changes\" comment=\"\" />\n      <created>1663869650704</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1663869650704</updated>\n      <workItem from=\"1663869655807\" duration=\"2758000\" />\n      <workItem from=\"1663947900439\" duration=\"4113000\" />\n      <workItem from=\"1663953595928\" duration=\"2627000\" />\n      <workItem from=\"1663966134690\" duration=\"1271000\" />\n      <workItem from=\"1664126477303\" duration=\"5428000\" />\n      <workItem from=\"1664380497349\" duration=\"567000\" />\n      <workItem from=\"1664381574949\" duration=\"600000\" />\n      <workItem from=\"1664382192078\" duration=\"353000\" />\n      <workItem from=\"1664382572196\" duration=\"9654000\" />\n      <workItem from=\"1664483295413\" duration=\"1081000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Initialize Git\">\n      <created>1663869824911</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663869824911</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Initialize the project\">\n      <created>1664386268895</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664386268895</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Added Birds types and names and categories\">\n      <created>1664389204804</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664389204804</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Added Birds of Prey, FlightLess Birds, Owls, and Parrots.\">\n      <created>1664394688896</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664394688896</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"5\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Initialize Git\" />\n    <MESSAGE value=\"Initialize the project\" />\n    <MESSAGE value=\"Added Birds types and names and categories\" />\n    <MESSAGE value=\"Added Birds of Prey, FlightLess Birds, Owls, and Parrots.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added Birds of Prey, FlightLess Birds, Owls, and Parrots.\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-field\">\n          <url>file://$PROJECT_DIR$/temp1/src/AbstractBirds.java</url>\n          <line>4</line>\n          <properties field=\"characteristic\" class=\"AbstractBirds\" />\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/LAB1/src/BirdsOfPrey.java</url>\n          <line>4</line>\n          <properties class=\"BirdsOfPrey\" method=\"&lt;init&gt;\">\n            <option name=\"EMULATED\" value=\"true\" />\n            <option name=\"WATCH_EXIT\" value=\"false\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/LAB1/src/FlightLess.java</url>\n          <line>4</line>\n          <properties class=\"FlightLess\" method=\"&lt;init&gt;\">\n            <option name=\"EMULATED\" value=\"true\" />\n            <option name=\"WATCH_EXIT\" value=\"false\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"3\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0f9953306856ed813ba9aa3c91789ba0cc945617)
+++ b/.idea/workspace.xml	(date 1664485215652)
@@ -4,13 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7948e5fc-f9e6-4264-b3f9-810baf5dce05" name="Changes" comment="Added Birds of Prey, FlightLess Birds, Owls, and Parrots.">
+    <list default="true" id="7948e5fc-f9e6-4264-b3f9-810baf5dce05" name="Changes" comment="Added Birds types and names and categories">
+      <change afterPath="$PROJECT_DIR$/LAB1/src/FlightLess.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LAB1/src/Owls.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LAB1/src/Parrots.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/LAB1/src/Waterfowl.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/LAB1/src/AbstractBirds.java" beforeDir="false" afterPath="$PROJECT_DIR$/LAB1/src/AbstractBirds.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/LAB1/src/BIRDTYPE.java" beforeDir="false" afterPath="$PROJECT_DIR$/LAB1/src/BIRDTYPE.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/LAB1/src/BirdsOfPrey.java" beforeDir="false" afterPath="$PROJECT_DIR$/LAB1/src/BirdsOfPrey.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/LAB1/src/FlightLess.java" beforeDir="false" afterPath="$PROJECT_DIR$/LAB1/src/FlightLess.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/LAB1/src/Owls.java" beforeDir="false" afterPath="$PROJECT_DIR$/LAB1/src/Owls.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/LAB1/src/Parrots.java" beforeDir="false" afterPath="$PROJECT_DIR$/LAB1/src/Parrots.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -40,30 +42,12 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
-    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit4&quot;,
-    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4&quot;: &quot;&quot;,
-    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;openjdk-19&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/sidaz/Desktop/5010/NEUOOP22F/temp1/test&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
-  }
-}</component>
+  <component name="PropertiesComponent">
+    <property name="node.js.detected.package.eslint" value="true" />
+    <property name="node.js.detected.package.tslint" value="true" />
+    <property name="node.js.selected.package.eslint" value="(autodetect)" />
+    <property name="node.js.selected.package.tslint" value="(autodetect)" />
+  </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\sidaz\Desktop\5010\NEUOOP22F\temp1\test" />
@@ -125,8 +109,7 @@
       <workItem from="1664380497349" duration="567000" />
       <workItem from="1664381574949" duration="600000" />
       <workItem from="1664382192078" duration="353000" />
-      <workItem from="1664382572196" duration="9654000" />
-      <workItem from="1664483295413" duration="1081000" />
+      <workItem from="1664382572196" duration="9582000" />
     </task>
     <task id="LOCAL-00001" summary="Initialize Git">
       <created>1663869824911</created>
@@ -149,14 +132,7 @@
       <option name="project" value="LOCAL" />
       <updated>1664389204804</updated>
     </task>
-    <task id="LOCAL-00004" summary="Added Birds of Prey, FlightLess Birds, Owls, and Parrots.">
-      <created>1664394688896</created>
-      <option name="number" value="00004" />
-      <option name="presentableId" value="LOCAL-00004" />
-      <option name="project" value="LOCAL" />
-      <updated>1664394688896</updated>
-    </task>
-    <option name="localTasksCounter" value="5" />
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -177,8 +153,7 @@
     <MESSAGE value="Initialize Git" />
     <MESSAGE value="Initialize the project" />
     <MESSAGE value="Added Birds types and names and categories" />
-    <MESSAGE value="Added Birds of Prey, FlightLess Birds, Owls, and Parrots." />
-    <option name="LAST_COMMIT_MESSAGE" value="Added Birds of Prey, FlightLess Birds, Owls, and Parrots." />
+    <option name="LAST_COMMIT_MESSAGE" value="Added Birds types and names and categories" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: LAB1/src/Location.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Location.java b/LAB1/src/Location.java
new file mode 100644
--- /dev/null	(date 1664484501651)
+++ b/LAB1/src/Location.java	(date 1664484501651)
@@ -0,0 +1,4 @@
+public enum Location {//Location of aviaries
+  L1,L2,L3,L4,L5,L6,L7,L8,L9,L10,
+  L11,L12,L13,L14,L15,L16,L17,L18,L19,L20
+}
Index: LAB1/src/Waterfowl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Waterfowl.java b/LAB1/src/Waterfowl.java
new file mode 100644
--- /dev/null	(date 1664485389151)
+++ b/LAB1/src/Waterfowl.java	(date 1664485389151)
@@ -0,0 +1,53 @@
+import java.util.ArrayList;
+
+import javax.swing.plaf.synth.SynthListUI;
+
+public class Waterfowl extends AbstractBirds{
+  private ArrayList<WATERBODY> waterbodies;
+
+  public Waterfowl(String birdName, BIRDTYPE birdType, int numOfWords, String favoritePhrase, ArrayList<String> characteristics, boolean extinct, int numWings, ArrayList<FEED> preferredFood, boolean waterBird, ArrayList<WATERBODY> waterBody) {
+    super(birdName, birdType, characteristics, extinct, numWings, preferredFood, waterBird, waterBody);
+    ArrayList<String> chara = new ArrayList<>();
+    chara.add("Short, curved beak and are known for their intelligence and ability to mimic sounds.");
+
+    if ( 0 > numOfWords ||  numOfWords > 100) {
+      throw new IllegalArgumentException("Pet parrots can learn a vocabulary  of up to 100 words. ");
+    }
+    this.numOfWords = numOfWords;
+    this.favoritePhrase = favoritePhrase;
+    if(birdType != BIRDTYPE.ROSE_RING_PARAKEET && birdType != BIRDTYPE.GRAY_PARROT && birdType != BIRDTYPE.SULFUR_CRESTED_COCKATOO){
+      throw new IllegalArgumentException("Parrots include Rose-Ring Parakeet, Gray Parrot, and Sulfur-crested cockatoo.");
+    }
+  }
+
+  public int getNumberOfWord(){
+    return this.numOfWords;
+  }
+
+  public String getFavoritePhrase(){
+    return this.favoritePhrase;
+  }
+
+  @Override
+  public CLASSIFICATIONS getBirdsClass() {
+    return CLASSIFICATIONS.PARROTS;
+  }
+
+  @Override
+  public String toString() {
+    String desc;
+    String extinct;
+    if (isExtinct()){
+      extinct = "Yes ";
+    } else {
+      extinct = "No ";
+    }
+    desc = "Bird Name:" +  this.birdName + " Bird Type: " + this.birdType + "\n" +
+            " Characteristics: " + this.characteristics + "\n" +
+            " Extinction: " + extinct + "Number of Wings: " + "\n" +
+            " Preferred Food: " + this.preferredFood + "\n" +
+            " Number of Words: " + this.numOfWords + " Favorite Phrase: " + this.favoritePhrase + "\n";
+
+    return desc;
+  }
+}
Index: LAB1/src/Aviary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Aviary.java b/LAB1/src/Aviary.java
new file mode 100644
--- /dev/null	(date 1664484501660)
+++ b/LAB1/src/Aviary.java	(date 1664484501660)
@@ -0,0 +1,8 @@
+public interface Aviary {
+  int getSize();//return the current size of the aviary
+  void addBird(Birds bird);
+  Location getLocation();//return the location of the aviary
+
+
+
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" default=\"true\" project-jdk-name=\"openjdk-19\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 0f9953306856ed813ba9aa3c91789ba0cc945617)
+++ b/.idea/misc.xml	(date 1664484505073)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="openjdk-19" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15" default="true" project-jdk-name="15" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: LAB1/src/Aviaries.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LAB1/src/Aviaries.java b/LAB1/src/Aviaries.java
new file mode 100644
--- /dev/null	(date 1664484505069)
+++ b/LAB1/src/Aviaries.java	(date 1664484505069)
@@ -0,0 +1,42 @@
+import java.util.ArrayList;
+
+public class Aviaries implements Aviary {
+  private ArrayList<Birds> ListOfBirds;
+
+  private Location aviaryLocation;
+
+
+  public Aviaries(Location aviaryLocation) {
+    ListOfBirds = new ArrayList<>();
+    this.aviaryLocation = aviaryLocation;//only initialize the location of aviary with the constructor
+  }
+
+  @Override
+  public int getSize() {//return the number of birds in the current aviary
+    return ListOfBirds.size();
+  }
+
+  @Override
+  public void addBird(Birds bird) {//add a new bird to the aviary
+    ListOfBirds.add(bird);
+  }
+
+  @Override
+  public Location getLocation() {
+    return this.aviaryLocation;
+  }
+
+  @Override
+  public String toString() {
+    StringBuilder stringBuilder = new StringBuilder();
+    stringBuilder.append("Aviary: ").append(getLocation()).append("\n");
+    for(Birds birds: this.ListOfBirds){
+        stringBuilder.append(birds).append("\n");
+    }
+    return stringBuilder.toString();
+  }
+}
+
+
+
+
